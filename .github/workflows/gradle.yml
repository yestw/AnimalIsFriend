name: Spring boot & Gradle CI/CD

# Event Trigger
# master branch에 push 또는 pull request가 발생할 경우 동작
# branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음 
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Build
    - name: Build with Gradle
      run: ./AnimalIsFriend-BE/gradlew clean build

    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

    # Jar 파일 copy
    - name: Copy Jar
      run: cp ./AnimalIsFriend-BE/build/libs/*.jar ./deploy/

    # 압축 파일 형태로 전달
    - name: Mkae zip file
      run: zip -r -qq -j ./springboot -intro-build.zip ./deploy

    # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env :
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_IMAGE_BUCKET: ${{ secrets.AWS_IMAGE_BUCKET }}
        BACK_END: ${{ secrets.BACK_END }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_URL: ${{ secrets.DB_URL }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        FRONT_END: ${{ secrets.FRONT_END }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
        KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \ ./springboot-intro-build.zip s3://springboot-intro-build/
